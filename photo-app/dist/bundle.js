(()=>{"use strict";var e={987:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Album=void 0;const o=r(123);class i extends o.Item{constructor(e,t){super(e,t),this.picture=[]}addPicture(e){this.picture.push(e)}}t.Album=i},123:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Item=void 0,t.Item=class{constructor(e,t){this.id=e,this.title=t}}},945:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.PhotoOrientation=void 0,(r=t.PhotoOrientation||(t.PhotoOrientation={}))[r.Landscape=0]="Landscape",r[r.Portrait=1]="Portrait",r[r.Square=2]="Square",r[r.Panorama=3]="Panorama"},449:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Picture=void 0;const o=r(123);class i extends o.Item{constructor(e,t,r,o){super(e,t),this._date=r,this._orientation=o}}t.Picture=i},536:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.User=void 0,t.User=class{constructor(e,t,r,o){this.id=e,this.username=t,this.firstName=r,this.isPro=o,this.album=[]}addAlbum(e){this.album.push(e)}removeAlbum(e){const t=this.album.findIndex((t=>t.id===e.id));let r;return t>=0&&(r=this.album[t],this.album.splice(t,1)),r}}}},t={};function r(o){var i=t[o];if(void 0!==i)return i.exports;var s=t[o]={exports:{}};return e[o](s,s.exports,r),s.exports}(()=>{const e=r(536),t=r(987),o=r(449),i=r(945),s=new e.User(1,"nekokami","Sofia",!0),a=new t.Album(10,"Album title"),u=new o.Picture(1,"Primera foto","10-20-2020",i.PhotoOrientation.Panorama);s.addAlbum(a),a.addPicture(u),console.log("user",s),s.removeAlbum(a),console.log("user",s)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,